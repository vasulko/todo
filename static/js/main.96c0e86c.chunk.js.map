{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onChangeTerm","e","target","value","setState","props","onSearchChange","type","placeholder","onChange","this","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","classNames","important","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","status","name","filter","onFilterChange","buttons","clazz","ItemAddFrom","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","itemAdded","text","newItem","toggleProperty","items","arr","propName","oldItem","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96c0e86c.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\n\r\nimport './app-header.css'\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <header className=\"app-header d-flex\">\r\n            <h1>Todo List1</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    \r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onChangeTerm = (e) => {\r\n        const term = e.target.value;\r\n        this.setState( { term });\r\n        this.props.onSearchChange(term);\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n                <input type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"search\"\r\n                onChange={ this.onChangeTerm }/>\r\n        );\r\n    }\r\n};","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from \"react\";\r\n\r\nimport \"./todo-list-item.css\";\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  render() {\r\n    const { label, onDeleted,\r\n            onToggleImportant, \r\n            onToggleDone,\r\n            done, important } = this.props;\r\n\r\n    let classNames = 'todo-list-item';\r\n\r\n    if(done){\r\n      classNames += ' done'; \r\n    }\r\n\r\n    if(important){\r\n      classNames += ' important';\r\n    }\r\n    \r\n    return (\r\n      <span className={ classNames }>\r\n        <span\r\n          className=\"todo-list-item-label\"\r\n          onClick={ onToggleDone }\r\n        >\r\n          {label}\r\n        </span>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-success btn-sm float-right\"\r\n          onClick = { onToggleImportant }\r\n        >\r\n          <i className=\"fa fa-exclamation\" />\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-outline-danger btn-sm float-right\"\r\n          onClick={onDeleted}\r\n        >\r\n          <i className=\"fa fa-trash-o\" />\r\n        </button>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item'\r\nimport './todo-list.css'\r\nconst TodoList = ({ todos, onDeleted,\r\n    onToggleImportant, onToggleDone }) => {\r\n    const elements  = todos.map((item) => {\r\n\r\n        const {id, ...itemProps} = item;\r\n        return(\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem \r\n                {...itemProps}\r\n                onDeleted={()=>{onDeleted(id)}}\r\n                onToggleImportant={()=>{onToggleImportant(id)}}\r\n                onToggleDone = {()=>{onToggleDone(id)}}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list \">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from \"react\";\r\n\r\nimport \"./item-status-filter.css\";\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n  status = [\r\n    {name: 'all', label: 'All'},\r\n    {name: 'active', label: 'Active'},\r\n    {name: 'done', label: 'Done'}\r\n  ]\r\n\r\n\r\n  render() {\r\n    const { filter, onFilterChange } = this.props;\r\n    const buttons = this.status.map(({name, label}) =>{\r\n    const isActive = filter === name;\r\n    const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n      return(\r\n        <button \r\n        type=\"button\" \r\n        className={`btn ${clazz}`} \r\n        key={name}\r\n        onClick={()=>{onFilterChange(name)}}>{label}</button>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ItemAddFrom from './item-add-form';\r\n\r\nexport default ItemAddFrom;","import React, {Component} from 'react';\r\n\r\nimport './item-add-form.css'\r\n\r\nexport default class ItemAddForm extends Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) =>{\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n    \r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label: ''\r\n        });\r\n    };\r\n\r\n    render(){\r\n        return(\r\n            <form className=\"item-add-form d-flex\"\r\n                    onSubmit = {this.onSubmit}>\r\n                <input type=\"text\"\r\n                        className=\"form-control\"\r\n                        onChange={this.onLabelChange}\r\n                        placeholder=\"What needs to be done\"\r\n                        value={this.state.label}/>\r\n                <button \r\n                className=\"btn btn-outline-secondary\">\r\n                    Add Item</button>\r\n            </form>\r\n        );\r\n    }\r\n}","import App from './app';\r\n\r\nexport default App;","import React, { Component } from \"react\";\r\n\r\nimport AppHeader from \"../app-header\";\r\nimport SearchPanel from \"../search-panel\";\r\nimport TodoList from \"../todo-list\";\r\nimport ItemStatusFilter from \"../item-status-filter\";\r\nimport ItemAddForm from \"../item-add-form\";\r\n\r\nimport \"./app.css\";\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n\r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Make Awesome App'),\r\n      this.createTodoItem('Have a lunch')\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {    \r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n        default:\r\n            return items;\r\n    }\r\n  }\r\n\r\n  deleteItem = id => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex(el => el.id === id);\r\n\r\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    });\r\n  };\r\n\r\n  itemAdded = text => {\r\n    const newItem = this.createTodoItem(text);\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArray = [...todoData, newItem];\r\n\r\n      return {\r\n        todoData: newArray\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex(el => el.id === id);\r\n\r\n    const oldItem = arr[idx];\r\n\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\r\n  }\r\n\r\n  onToggleImportant = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"important\")\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleDone = id => {\r\n    this.setState(({ todoData }) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, \"done\")\r\n      };\r\n    });\r\n  };\r\n\r\n  onFilterChange = (filter) => {\r\n      this.setState({ filter });\r\n  }\r\n  \r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n\r\n    return items.filter(item => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  onSearchChange = term => {\r\n    this.setState({\r\n      term: term\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n\r\n    const visibleItems = this.filter(this.search(todoData, term), filter);\r\n\r\n    const doneCount = todoData.filter(el => el.done).length;\r\n    const todoCount = todoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\">\r\n      <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel onSearchChange={this.onSearchChange} />\r\n          <ItemStatusFilter\r\n            filter={filter}\r\n            onFilterChange = {this.onFilterChange}\r\n          />\r\n        </div>\r\n\r\n        <TodoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone}\r\n        />\r\n\r\n        <ItemAddForm onItemAdded={this.itemAdded} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, \n    document.getElementById('root'));"],"sourceRoot":""}